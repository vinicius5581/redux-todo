{"version":3,"sources":["state/actions/index.js","components/Link.js","containers/FilterLink.js","components/Footer.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","components/App.js","state/reducers/index.js","state/Store.js","test.js","index.js"],"names":["ADD_TODO","TOGGLE_TODO","SET_VISIBILITY_FILTER","VisibilityFilters","addTodo","text","dispatch","setTimeout","type","addTodoActionCreator","toggleTodo","index","toggleTodoActionCreator","setVisibilityFilter","filter","setVisibilityFilterActionCreator","Link","_ref","active","children","onClick","react_default","a","createElement","href","e","preventDefault","FilterLink","connect","state","ownProps","visibilityFilter","Footer","containers_FilterLink","AddTodo","input","onSubmit","value","trim","ref","node","Todo","completed","style","textDecoration","TodoList","todos","onTodoClick","map","todo","components_Todo","Object","assign","key","getVisibleTodos","t","VisibleTodoList","id","App","containers_AddTodo","containers_VisibleTodoList","components_Footer","SHOW_ALL","todoApp","combineReducers","arguments","length","undefined","action","toConsumableArray","concat","store","createStore","compose","applyMiddleware","thunk","window","devToolsExtension","f","console","log","getState","unsubscribe","subscribe","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.10c83e7a.chunk.js","sourcesContent":["/*\n * action types\n */\n\nexport const ADD_TODO = 'ADD_TODO'\nexport const TOGGLE_TODO = 'TOGGLE_TODO'\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER'\n\n/*\n * other constants\n */\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\n}\n\n/*\n * action creators\n */\n\nexport function addTodoActionCreator(text) {\n  return { type: ADD_TODO, text }\n}\n\nexport function addTodo(text) {\n  return function (dispatch) {\n    setTimeout(() => {\n      dispatch(addTodoActionCreator(text))\n    }, 2500)\n  }\n}\n\nexport function toggleTodoActionCreator(index) {\n  return { type: TOGGLE_TODO, index }\n}\n\nexport function toggleTodo(index) {\n  return function (dispatch) {\n    setTimeout(() => {\n      dispatch(toggleTodoActionCreator(index))\n    }, 2500)\n  }\n}\n\nexport function setVisibilityFilterActionCreator(filter) {\n  return { type: SET_VISIBILITY_FILTER, filter }\n}\n\nexport function setVisibilityFilter(filter) {\n  return function (dispatch) {\n    setTimeout(() => {\n      dispatch(setVisibilityFilterActionCreator(filter))\n    }, 2500)\n  }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ active, children, onClick }) => {\n  if (active) {\n    return <span>{children}</span>\n  }\n\n  return (\n    <a\n      href=\"\"\n      onClick={e => {\n        e.preventDefault()\n        onClick()\n      }}\n    >\n      {children}\n    </a>\n  )\n}\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default Link","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../state/actions'\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    active: ownProps.filter === state.visibilityFilter\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onClick: () => {\n      dispatch(setVisibilityFilter(ownProps.filter))\n    }\n  }\n}\n\nconst FilterLink = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)\n\nexport default FilterLink","import React from 'react'\nimport FilterLink from '../containers/FilterLink'\nimport { VisibilityFilters } from '../state/actions'\n\nconst Footer = () => (\n  <p>\n    Show:\n    {' '}\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>\n      All\n    </FilterLink>\n    {', '}\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>\n      Active\n    </FilterLink>\n    {', '}\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>\n      Completed\n    </FilterLink>\n  </p>\n)\n\nexport default Footer","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo } from '../state/actions'\n\nlet AddTodo = ({ dispatch }) => {\n  let input\n\n  return (\n    <div>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          if (!input.value.trim()) {\n            return\n          }\n          dispatch(addTodo(input.value))\n          input.value = ''\n        }}\n      >\n        <input\n          ref={node => {\n            input = node\n          }}\n        />\n        <button type=\"submit\">\n          Add Todo\n        </button>\n      </form>\n    </div>\n  )\n}\n\nAddTodo = connect()(AddTodo)\n\nexport default AddTodo","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Todo = ({ onClick, completed, text }) => (\n  <li\n    onClick={onClick}\n    style={ {\n      textDecoration: completed ? 'line-through' : 'none'\n    }}\n  >\n    {text}\n  </li>\n)\n\nTodo.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired\n}\n\nexport default Todo","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Todo from './Todo'\n\nconst TodoList = ({ todos, onTodoClick }) => (\n  <ul>\n    {todos.map((todo, index) => (\n      <Todo key={index} {...todo} onClick={() => onTodoClick(index)} />\n    ))}\n  </ul>\n)\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired,\n  onTodoClick: PropTypes.func.isRequired\n}\n\nexport default TodoList","import { connect } from 'react-redux'\nimport { toggleTodo } from '../state/actions'\nimport TodoList from '../components/TodoList'\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case 'SHOW_ALL':\n      return todos\n    case 'SHOW_COMPLETED':\n      return todos.filter(t => t.completed)\n    case 'SHOW_ACTIVE':\n      return todos.filter(t => !t.completed)\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    todos: getVisibleTodos(state.todos, state.visibilityFilter)\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTodoClick: id => {\n      dispatch(toggleTodo(id))\n    }\n  }\n}\n\nconst VisibleTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)\n\nexport default VisibleTodoList","import React from 'react'\nimport Footer from './Footer'\nimport AddTodo from '../containers/AddTodo'\nimport VisibleTodoList from '../containers/VisibleTodoList'\n\nconst App = () => (\n  <div>\n    <AddTodo />\n    <VisibleTodoList />\n    <Footer />\n  </div>\n)\n\nexport default App","import { combineReducers } from 'redux'\nimport {\n  ADD_TODO,\n  TOGGLE_TODO,\n  SET_VISIBILITY_FILTER,\n  VisibilityFilters\n} from '../actions'\nconst { SHOW_ALL } = VisibilityFilters\n\nfunction visibilityFilter(state = SHOW_ALL, action) {\n  switch (action.type) {\n    case SET_VISIBILITY_FILTER:\n      return action.filter\n    default:\n      return state\n  }\n}\n\nfunction todos(state = [], action) {\n  switch (action.type) {\n    case ADD_TODO:\n      return [\n        ...state,\n        {\n          text: action.text,\n          completed: false\n        }\n      ]\n    case TOGGLE_TODO:\n      return state.map((todo, index) => {\n        if (index === action.index) {\n          return Object.assign({}, todo, {\n            completed: !todo.completed\n          })\n        }\n        return todo\n      })\n    default:\n      return state\n  }\n}\n\nconst todoApp = combineReducers({\n  visibilityFilter,\n  todos\n})\n\nexport default todoApp","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk';\nimport todoApp from './reducers'\n\nconst store = createStore(\n    todoApp, \n    compose(\n        applyMiddleware(thunk),\n        window.devToolsExtension ? window.devToolsExtension() : f => f\n      )\n)\n\nexport default store","import {\n    addTodo,\n    toggleTodo,\n    setVisibilityFilter,\n    VisibilityFilters\n  } from './state/actions'\n\n  import store from './state/Store'\n  \n  // Log the initial state\n  console.log(store.getState())\n  \n  // Every time the state changes, log it\n  // Note that subscribe() returns a function for unregistering the listener\n  const unsubscribe = store.subscribe(() =>\n    console.log(store.getState())\n  )\n  \n  // Dispatch some actions\n  store.dispatch(addTodo('Learn about actions'))\n  store.dispatch(addTodo('Learn about reducers'))\n  store.dispatch(addTodo('Learn about store'))\n  store.dispatch(toggleTodo(0))\n  store.dispatch(toggleTodo(1))\n  store.dispatch(setVisibilityFilter(VisibilityFilters.SHOW_ALL))\n  \n  // Stop listening to state updates\n  unsubscribe()","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport store from './state/Store'\nimport  './test';\n\n\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}